{"version":3,"sources":["Components/Navbar.js","Components/Textarea.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","class","onClick","toggleMode","htmlFor","Textarea","useState","Text","setText","value","onChange","e","target","rows","newText","toUpperCase","toLowerCase","replace","trim","event","strArr","split","reverse","join","length","Math","round","App","setMode","document","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf22a04a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n           <li class=\"nav-item\">\r\n            <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n           </li>\r\n          </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\"  onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Textarea(props) {\r\n    const [Text, setText] = useState(\"\");\r\n\r\n    const handelOnChange = (e) =>{\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const handelUpClick = () =>{\r\n        const newText = Text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handelLoClick = () =>{\r\n        const newText = Text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handelClearClick = () =>{\r\n        const newText = '';\r\n        setText(newText);\r\n    }\r\n\r\n    const handleReverse = (event) => {\r\n        let strArr = Text.split(\"\");\r\n        strArr = strArr.reverse();\r\n        let newText = strArr.join(\"\");\r\n        setText(newText);\r\n      }\r\n    \r\n    const handleExtraSpaces = ()=>{\r\n        let newText = Text.replace(/\\s+/g, '').trim();\r\n        setText(newText)\r\n    }\r\n\r\n    return (  \r\n        <>   \r\n        <div className='container'>\r\n          <div className=\"mb-3\">\r\n          <h3 className = {`text-${props.mode==='light'?'dark':'light'}`}>Enter Text</h3>\r\n           <textarea value = {Text} onChange={handelOnChange} className=\"form-control\" id=\"myBox\" rows=\"8\"></textarea>\r\n          </div> \r\n          <button className=\"btn btn-primary mx-1\" onClick={handelUpClick} type=\"submit\">Convert to Uppercase</button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handelLoClick} type=\"submit\">Convert to Lowercase</button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces} type=\"submit\">Remove Extra Spaces</button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handleReverse} type=\"submit\">Reverse Text</button>\r\n          <button className=\"btn btn-primary mx-1\" onClick={handelClearClick} type=\"submit\">Clear Text</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <h4 className = {`my-1 text-${props.mode==='light'?'dark':'light'}`}>Your Text Summary</h4>\r\n             <p className = {`text-${props.mode==='light'?'dark':'light'}`}>{Text.split(\" \").length} words and {Text.length} characters</p> \r\n             <p className = {`text-${props.mode==='light'?'dark':'light'}`}>{Math.round(Text.length/500)} minutes read</p>\r\n        </div>\r\n        </> \r\n\r\n    )\r\n}\r\n","import './App.css';\r\nimport Navbar from './Components/Navbar';\r\nimport Textarea from './Components/Textarea';\r\nimport React, {useState} from 'react';\r\n\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light');\r\n\r\n  const toggleMode = () => {\r\n     if(mode === 'light'){\r\n         setMode('dark');\r\n         document.body.style.backgroundColor = '#262523';\r\n       }\r\n     else{\r\n         setMode('light');\r\n         document.body.style.backgroundColor = 'white';\r\n       }  \r\n  }\r\n  return (\r\n        <>\r\n        <Navbar title = \"TextUtils\" mode = {mode} toggleMode = {toggleMode}/>\r\n        <div className=\"container my-3\" >  \r\n          <Textarea mode = {mode} />\r\n        </div> \r\n         </> \r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}